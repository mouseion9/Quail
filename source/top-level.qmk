;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;
;;;                               top-level.system                               
;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;
;;;
;;; Copyright (c) 1990 Statistical Computing Laboratory, University of Waterloo
;;;
;;;
;;;  Authors:
;;;     R.W. Oldford 1991.
;;; 
;;;
;;;----------------------------------------------------------------------------

(in-package :make)

(eval-when (:compile-toplevel :load-toplevel :execute)
  (load-pathnames "top-level"))

(defsystem top-level
  :source-pathname (identity (append-directories
                                (path-source)
                                (path-top-level)))
  :binary-pathname (identity (append-directories
                                (path-binary)
                                (bin (path-top-level))))
  :components ((:file "quail-top-level-read")
               (:file (add-system-extension "top-level"))
               (:file "infix") 
               (:file "top-level")
               ;; the following allows execution of forms from within an edit
               ;; window *when* the Quail top-level loop is running.
               #+:ccl (:file (add-system-extension "editor"))
               (:file "quail-menu")
               (:file "quail-plot-menu")
               (:file (wb-add-system-extension "quail-menubar"))
               ))


(defun compile-top-level (&rest op-on-sys-keyword-pairs
                                &key (verbose T)
                                &allow-other-keys)
  "Compiles the top-level system using make's~
   operate-on-system's keywords."
  (apply #'operate-on-system 'top-level 'compile
         :verbose verbose
         :allow-other-keys T op-on-sys-keyword-pairs))

(defun load-top-level (&rest op-on-sys-keyword-pairs
                             &key (verbose T)
                             &allow-other-keys)
  "Loads the top-level system using make's~
   operate-on-system's keywords."
  (apply #'operate-on-system 'top-level 'load
         :verbose verbose
         :allow-other-keys T op-on-sys-keyword-pairs))
