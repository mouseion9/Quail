(defun array-decimal-to-hex (a)
  (let
    ((ha (make-array (array-dimensions a))))
    (dotimes (i (array-dimension a 0))
      (dotimes (j (array-dimension a 1))
        (setf (aref ha i j)
              (format NIL "~2,48,x" (aref a i j)))))
    ha))

(defun array-decimal-to-binary (a)
  (let
    ((ha (make-array (array-dimensions a))))
    (dotimes (i (array-dimension a 0))
      (dotimes (j (array-dimension a 1))
        (setf (aref ha i j)
              (format NIL "~8,48,b" (aref a i j)))))
    ha))

(defun format-binary-array (the-array &optional destination (begin 0)
                                      (end 50))
  (let ((temp ""))
    (dotimes (y (array-dimension the-array 1))
      (dotimes (x (array-dimension the-array 0))
        (setf temp (concatenate 'string temp
                                (format NIL "~a" (aref the-array x y)))))
      (format destination "~&~b" (subseq (format NIL "~a" temp) begin end ))
      (setf temp ""))))

(defun list-to-array (list nrows ncols)
  (make-array
   (list nrows ncols)
   :initial-contents
     (qk:shape-as-array list (list nrows ncols) 'list)))
         


(setf a '#2A((0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
              0 0 0 0 0 1 1 0 0 0 0 255 255 192 192 192 192 192 192 192 192 192
              192 192 192 192 192 192 192 192 192 192 192 192 192 192 192 192 192
              255 255) 
             (0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 32 80 136 196 98 49 24
              12 6 3 1 0 0 0 0 0 0 240 255 255 31 0 0 255 255 0 0 0 0 0 0 0 0 0 0
              0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 255 255) 
             (0 0 0 0 0 0 0 0 0 0 0 12 15 15 55 71 67 79 49 1 2 4 8 17 10 4 0 0 
              128 64 32 16 143 199 99 49 24 13 6 0 252 255 255 255 0 255 255 0 0
              0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 255 255) 
             (0 0 0 0 0 0 0 1 3 7 15 23 39 199 195 224 241 250 252 254 126 126
              190 0 0 0 0 0 0 1 3 15 255 255 255 255 191 1 0 0 0 255 255 255 0 
              255 255 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 255 255)
             (3 4 8 16 32 64 128 0 225 242 244 248 240 252 254 254 63 63 31 31 15
              15 15 15 15 31 31 63 255 255 255 254 252 252 248 248 248 248 254 
              127 255 255 255 254 0 255 255 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
              0 0 0 0 0 0 0 255 255) 
             (128 192 96 48 16 32 64 128 0 0 0 0 0 0 0 0 0 128 192 192 192 192
              192 192 192 192 192 192 128 128 0 0 0 0 0 0 0 0 0 128 128 128 0 0 0
              255 255 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 255 255)
             (0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
              0 0 0 0 0 0 0 0 0 0 0 192 192 192 192 192 192 192 192 192 192 192
              192 192 192 192 192 192 192 192 192 192 192 192 192 192 192 192 192
              192 192)))

(setf ha (array-decimal-to-hex a))
(setf ba (array-decimal-to-binary a))
(format-binary-array ba)

(setf quail
      '(#x00 #x00 #x00 #x00 #x00 #x00 #x00 #x00 #x00 #x00 #x00 #x00
        #x00 #x00 #x00 #x00 #x00 #x00 #x00 #x00 #x00 #x00 #x00 #x00
        #x00 #x00 #x00 #x00 #x00 #x00 #x00 #x00 #x00 #x00 #x00 #x00
        #x00 #x00 #x00 #x00 #x00 #x00 #x00 #x00 #x00 #x00 #x00 #x00
        #x00 #x00 #x00 #x00 #x00 #x00 #x00 #x00 #x00 #x00 #x00 #x00
        #x00 #x00 #x00 #x00 #x00 #x00 #x00 #x00 #x00 #x00 #x00 #x00
        #x00 #x00 #x00 #x00 #x00 #x00 #x00 #x00 #x00 #x00 #x00 #x00
        #x00 #x00 #x00 #x00 #x00 #x00 #x00 #x00 #x00 #x00 #x00 #x00
        #x00 #x00 #x00 #x00 #x00 #x00 #x00 #x00 #x00 #x00 #x00 #x00
        #x00 #x00 #x00 #x00 #x00 #x00 #x00 #x00 #x00 #x00 #x00 #x00
        #x00 #x00 #x00 #x00 #x00 #x00 #x00 #x00 #x00 #x00 #x00 #x00
        #x00 #x00 #x00 #x00 #x00 #x00 #x00 #x00 #x00 #x00 #x00 #x00
        #x00 #x00 #x00 #x00 #x00 #x00 #x00 #x00 #x00 #x00 #x00 #x00
        #x00 #x00 #x00 #x00 #x00 #x00 #x00 #x00 #x00 #x00 #x00 #x00
        #x00 #x00 #x00 #x00 #x00 #x00 #x00 #x00 #x00 #x00 #x00 #x00
        #x00 #x00 #x00 #x00 #x00 #x00 #x80 #x0f #x00 #x00 #x00 #x00
        #x00 #x00 #x00 #x00 #x00 #x00 #x00 #xc0 #x3f #x00 #x00 #x00
        #x00 #x00 #x00 #x00 #x00 #x00 #x00 #x00 #xc0 #x3f #x00 #x00
        #x00 #x00 #x00 #x00 #x00 #x00 #x00 #x00 #x00 #xe0 #x7f #x00
        #x00 #x00 #x00 #x00 #x00 #x00 #x00 #x00 #x00 #x00 #xe0 #x7f
        #x00 #x00 #x00 #x00 #x00 #x00 #x00 #x00 #x00 #x00 #x00 #x60
        #x7c #x00 #x00 #x00 #x00 #x00 #x00 #x00 #x00 #x00 #x00 #x00
        #x60 #x00 #x00 #x00 #x00 #x00 #x00 #x00 #x00 #x00 #x00 #x00
        #x00 #x60 #x00 #x00 #x00 #x00 #x00 #x00 #x00 #x00 #x00 #x00
        #x00 #x00 #x20 #x00 #x00 #x00 #x00 #x00 #x00 #x00 #x00 #x00
        #x00 #x00 #x00 #x20 #x00 #x00 #x00 #x00 #x00 #x00 #x00 #x00
        #x00 #x00 #x00 #x00 #x20 #x00 #x00 #x00 #x00 #x00 #x00 #x00
        #x00 #x00 #x00 #x00 #x00 #x20 #x00 #x00 #x00 #x00 #x00 #x00
        #x00 #x00 #x00 #x00 #x00 #x00 #xf8 #x00 #x00 #x00 #x00 #x00
        #x00 #x00 #x00 #x00 #x00 #x00 #x00 #x06 #x03 #x00 #x00 #x00
        #x00 #x00 #x00 #x00 #x00 #x00 #x00 #x00 #x01 #x04 #x00 #x00
        #x00 #x00 #x00 #x00 #x00 #x00 #x00 #x00 #x00 #x01 #x04 #x00
        #x00 #x00 #x00 #x00 #x00 #x00 #x00 #x00 #x00 #x80 #x00 #x08
        #x00 #x00 #x00 #x00 #x00 #x00 #x00 #x00 #x00 #x00 #x80 #x00
        #x08 #x00 #x00 #x00 #x00 #x00 #x00 #x00 #x00 #x00 #x00 #xf0
        #x20 #x08 #x00 #x00 #x00 #x00 #x00 #x00 #x00 #x00 #x00 #x00
        #x9c #x00 #x08 #x00 #x00 #x00 #x00 #x00 #x00 #x00 #x00 #x00
        #x00 #x8e #x00 #x08 #x00 #x00 #x00 #x00 #x00 #x00 #x00 #x00
        #x00 #x00 #x70 #x01 #x04 #x00 #x00 #x00 #x00 #x00 #x00 #x00
        #x00 #x00 #x00 #xc0 #x03 #x0c #x00 #x00 #x00 #x00 #x00 #x00
        #x00 #x00 #x00 #x00 #x00 #x06 #x33 #x00 #x00 #x00 #x00 #x00
        #x00 #x00 #x00 #x00 #x00 #x00 #xf8 #x80 #x03 #x00 #x00 #x00
        #x00 #x00 #x00 #x00 #x00 #x00 #x00 #x10 #x80 #xff #x00 #x00
        #x00 #x00 #x00 #x00 #x00 #x00 #x00 #x00 #x10 #x60 #x00 #x03
        #x00 #x00 #x00 #x00 #x00 #x00 #x00 #x00 #x00 #x10 #x18 #x00
        #x0c #x00 #x00 #x00 #x00 #x00 #x00 #x00 #x00 #x00 #x30 #x04
        #x00 #x10 #x00 #x00 #x00 #x00 #x00 #x00 #x00 #x00 #x00 #x20
        #x02 #x00 #x20 #x00 #x00 #x00 #x00 #x00 #x00 #x00 #x00 #x00
        #x60 #x01 #x00 #x40 #x00 #x00 #x00 #x00 #x00 #x00 #x00 #x00
        #x00 #xc0 #x00 #x00 #x80 #x00 #x00 #x00 #x00 #x00 #x00 #x00
        #x00 #x00 #x40 #x00 #x00 #x00 #x01 #x08 #x00 #x00 #x00 #x00
        #x00 #x00 #x00 #x40 #x00 #x00 #x00 #xe3 #x0f #x00 #x00 #x00
        #x00 #x00 #x00 #x00 #x20 #x00 #x00 #x00 #xbe #x05 #x00 #x00
        #x00 #x00 #x00 #x00 #x00 #x20 #x00 #x00 #x00 #x82 #x00 #x00
        #x00 #x00 #x00 #x00 #x00 #x00 #x10 #x00 #x00 #x00 #x84 #x00
        #x00 #x00 #x00 #x00 #x00 #x00 #x00 #x10 #x00 #x00 #x00 #x84
        #x00 #x00 #x00 #x00 #x00 #x00 #x00 #x00 #x10 #x00 #x00 #x00
        #xc4 #x00 #x00 #x00 #x00 #x00 #x00 #x00 #x00 #x10 #x00 #x00
        #x00 #x44 #x00 #x00 #x00 #x00 #x00 #x00 #x00 #x00 #x10 #x00
        #x00 #x00 #x24 #x00 #x00 #x00 #x00 #x00 #x00 #x00 #x00 #x10
        #x00 #x00 #x00 #x2c #x00 #x00 #x00 #x00 #x00 #x00 #x00 #x00
        #x10 #x00 #x00 #x00 #x06 #x00 #x00 #x00 #x00 #x00 #x00 #x00
        #x00 #x10 #x00 #x00 #x00 #x06 #x00 #x00 #x00 #x00 #x00 #x00
        #x00 #x00 #x10 #x00 #x00 #x00 #x04 #x00 #x00 #x00 #x00 #x00
        #x00 #x00 #x00 #x20 #x00 #x00 #x00 #x02 #x00 #x00 #x00 #x00
        #x00 #x00 #x00 #x00 #x20 #x00 #x00 #x00 #x02 #x00 #x00 #x00
        #x00 #x00 #x00 #x00 #x00 #x40 #x00 #x00 #x00 #x01 #x00 #x00
        #x00 #x00 #x00 #x00 #x00 #x00 #x40 #x00 #x00 #x00 #x01 #x00
        #x00 #x00 #x00 #x00 #x00 #x00 #x00 #x80 #x00 #x00 #x80 #x00
        #x00 #x00 #x00 #x00 #x00 #x00 #x00 #x00 #x00 #x01 #x00 #x40
        #x00 #x00 #x00 #x00 #x00 #x00 #x00 #x00 #x00 #x00 #x02 #x00
        #x20 #x00 #x00 #x00 #x00 #x00 #x00 #x00 #x00 #x00 #x00 #x04
        #x00 #x10 #x00 #x00 #x00 #x00 #x00 #x00 #x00 #x00 #x00 #x00
        #x18 #x00 #x0c #x00 #x00 #x00 #x00 #x00 #x00 #x00 #x00 #x00
        #x00 #x70 #x00 #x03 #x00 #x00 #x00 #x00 #x00 #x00 #x00 #x00
        #x00 #x00 #x90 #xff #x00 #x00 #x00 #x00 #x00 #x00 #x00 #x00
        #x00 #x00 #x00 #x08 #x00 #x01 #x00 #x00 #x00 #x00 #x00 #x00
        #x00 #x00 #x00 #x00 #x04 #x00 #x01 #x00 #x00 #x00 #x00 #x00
        #x00 #x00 #x00 #x00 #x00 #x00 #x00 #x00 #x00 #x00 #x00 #x00
        #x00 #x00 #x00 #x00 #x00 #x00 #x03 #x00 #x00 #x06 #x00 #x00
        #x00 #x00 #x00 #x00 #x00 #x00 #x80 #x00 #x00 #x00 #x03 #x00
        #x00 #x00 #x00 #x00 #x00 #x00 #x00 #x40 #x00 #x00 #x82 #x00
        #x00 #x00 #x00 #x00 #x00 #x00 #x00 #x00 #x20 #x00 #x00 #x68
        #x00 #x00 #x00 #x00 #x00 #x00 #x00 #x00 #xa0 #x31 #xa0 #x00
        #x38 #x00 #x00 #x00 #x00 #x00 #x00 #x00 #x00 #x00 #x7c #xcf
        #x00 #x3d #x00 #x00 #x00 #x00 #x00 #x00 #x00 #x00 #x00 #x40
        #x60 #x77 #x00 #x00 #x00 #x00 #x00 #x00 #x00 #x00 #x00 #x00
        #x00 #x00 #x00 #x00 #x00 #x00 #x00 #x00 #x00 #x00 #x00 #x00
        #x00 #x00 #x00 #x00 #x00 #x00 #x00 #x00 #x00 #x00 #x00 #x00
        #x00 #x00 #x00 #x00 #x00 #x00 #x00 #x00 #x00 #x00 #x00 #x00
        #x00 #x00 #x00 #x00 #x00 #x00 #x00 #x00 #x00 #x00 #x00 #x00
        #x00 #x00 #x00 #x00 #x00 #x00 #x00 #x00 #x00 #x00 #x00 #x00
        #x00 #x00 #x00 #x00 #x00 #x00 #x00 #x00 #x00 #x00 #x00 #x00
        #x00 #x00 #x00 #x00 #x00 #x00 #x00 #x00 #x00 #x00 #x00 #x00
        #x00 #x00 #x00 #x00 #x00 #x00 #x00 #x00 #x00 #x00 #x00 #x00
        #x00 #x00 #x00 #x00 #x00 #x00 #x00 #x00 #x00 #x00 #x00 #x00
        #x00 #x00 #x00 #x00 #x00 #x00 #x00 #x00 #x00 #x00 #x00 #x00
        #x00 #x00 #x00 #x00 #x00 #x00 #x00 #x00 #x00 #x00 #x00 #x00
        #x00 #x00 #x00 #x00 #x00 #x00 #x00 #x00 #x00 #x00 #x00 #x00
        #x00 #x00 #x00 #x00 #x00 #x00 #x00 #x00 #x00 #x00 #x00 #x00
        #x00 #x00 #x00 #x00 #x00 #x00 #x00 #x00 #x00 #x00 #x00 #x00
        #x00 #x00 #x00 #x00 #x00 #x00 #x00 #x00 #x00 #x00 #x00 #x00
        #x00 #x00 #x00 #x00 #x00 #x00 #x00 #x00 #x00 #x00 #x00 #x00
        #x00 #x00 #x00 #x00 #x00 #x00 #x00 #x00 #x00 #x00 #x00 #x00
        #x00 #x00 #x00 #x00 #x00 #x00 #x00 #x00 #x00 #x00 #x00 #x00
        #x00 #x00 #x00 #x00 #x00 #x00 #x00 #x00 #x00 #x00 #x00 #x00
        #x00 #x00 #x00 #x00 #x00 #x00 #x00 #x00 #x00 #x00 #x00 #x00
        #x00 #x00 #x00 #x00 #x00 #x00 #x00 #x00 #x00 #x00 #x00 #x00
        #x00 #x00 #x00 #x00))

(<- q1 (list-to-array quail 100 13))
(<- q1b (array-decimal-to-binary q1))

(format-binary-array q1b *terminal-io*)